<!-- Copyright 2002-2014 MarkLogic Corporation.  All Rights Reserved. -->
<xs:schema targetNamespace="http://marklogic.com/semantics"
 xsi:schemaLocation="http://www.w3.org/2001/XMLSchema XMLSchema.xsd"
 elementFormDefault="qualified"
 attributeFormDefault="unqualified"
 xmlns="http://marklogic.com/semantics"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <xs:simpleType name="iri">
    <xs:annotation>
      <xs:documentation>
        An RDF IRI.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:anyURI">
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="iri-element">
    <xs:simpleContent>
      <xs:extension base="iri">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:element name="subject" type="iri-element">
    <xs:annotation>
      <xs:documentation>
        The subject of a triple.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="predicate" type="iri-element">
    <xs:annotation>
      <xs:documentation>
        The predicate of a triple.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="object">
    <xs:annotation>
      <xs:documentation>
        Triple object type.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="datatype" type="iri" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:element name="object" type="object">
    <xs:annotation>
      <xs:documentation>
        The object of a triple.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="triple">
    <xs:annotation>
      <xs:documentation>
        A triple
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax"/>
      <xs:element ref="subject"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax"/>
      <xs:element ref="predicate"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax"/>
      <xs:element ref="object"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>

  <xs:element name="triple" type="triple">
    <xs:annotation>
      <xs:documentation>
        A triple.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="triples">
    <xs:annotation>
      <xs:documentation>
        A set of triples
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="origin" minOccurs="0"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="triple"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>

  <xs:element name="triples" type="triples">
    <xs:annotation>
      <xs:documentation>
        A set of triples.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="origin" type="iri-element">
    <xs:annotation>
      <xs:documentation>
        The URI of the document from which these triples were loaded.
      </xs:documentation>
      <xs:appinfo>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>

</xs:schema>

